;; Fifteen puzzle problem #16 from Korf's AIJ (27) paper.
;; optimal solution cost = 42, manhattan estimate = 24,
;; max_pair estimate = 15.

(define (problem n16)
  (:domain n-puzzle-fn-v1)
  (:objects
    
  )

  (:init
    (= (tile_at 1) 0)
	(= (blank) 1)
	(= (tile_at 2) 1)
	(= (tile_at 3) 2)
	(= (tile_at 4) 3)
	(= (tile_at 5) 4)
	(= (tile_at 6) 5)
	(= (tile_at 7) 6)
	(= (tile_at 8) 7)
	(= (tile_at 9) 8)
	(= (tile_at 10) 9)
	(= (tile_at 11) 10)
	(= (tile_at 12) 11)
	(= (tile_at 13) 12)
	(= (tile_at 14) 13)
	(= (tile_at 15) 14)
	(= (tile_at 16) 15)
	(= (next up 0) 0)
	(= (next down 0) 0)
	(= (next left 0) 0)
	(= (next right 0) 0)
	(= (next up 1) 0)
	(= (next down 1) 5)
	(= (next left 1) 0)
	(= (next right 1) 2)
	(= (next up 2) 0)
	(= (next down 2) 6)
	(= (next left 2) 1)
	(= (next right 2) 3)
	(= (next up 3) 0)
	(= (next down 3) 7)
	(= (next left 3) 2)
	(= (next right 3) 4)
	(= (next up 4) 0)
	(= (next down 4) 8)
	(= (next left 4) 3)
	(= (next right 4) 0)
	(= (next up 5) 1)
	(= (next down 5) 9)
	(= (next left 5) 0)
	(= (next right 5) 6)
	(= (next up 6) 2)
	(= (next down 6) 10)
	(= (next left 6) 5)
	(= (next right 6) 7)
	(= (next up 7) 3)
	(= (next down 7) 11)
	(= (next left 7) 6)
	(= (next right 7) 8)
	(= (next up 8) 4)
	(= (next down 8) 12)
	(= (next left 8) 7)
	(= (next right 8) 0)
	(= (next up 9) 5)
	(= (next down 9) 13)
	(= (next left 9) 0)
	(= (next right 9) 10)
	(= (next up 10) 6)
	(= (next down 10) 14)
	(= (next left 10) 9)
	(= (next right 10) 11)
	(= (next up 11) 7)
	(= (next down 11) 15)
	(= (next left 11) 10)
	(= (next right 11) 12)
	(= (next up 12) 8)
	(= (next down 12) 16)
	(= (next left 12) 11)
	(= (next right 12) 0)
	(= (next up 13) 9)
	(= (next down 13) 0)
	(= (next left 13) 0)
	(= (next right 13) 14)
	(= (next up 14) 10)
	(= (next down 14) 0)
	(= (next left 14) 13)
	(= (next right 14) 15)
	(= (next up 15) 11)
	(= (next down 15) 0)
	(= (next left 15) 14)
	(= (next right 15) 16)
	(= (next up 16) 12)
	(= (next down 16) 0)
	(= (next left 16) 15)
	(= (next right 16) 0)
  )

  (:goal (and 
    (= (tile_at 1) 1)
	(= (tile_at 2) 3)
	(= (tile_at 3) 2)
	(= (tile_at 4) 5)
	(= (tile_at 5) 10)
	(= (tile_at 6) 9)
	(= (tile_at 7) 15)
	(= (tile_at 8) 6)
	(= (tile_at 9) 8)
	(= (tile_at 10) 14)
	(= (tile_at 11) 13)
	(= (tile_at 12) 11)
	(= (tile_at 13) 12)
	(= (tile_at 14) 4)
	(= (tile_at 15) 7)
	(= (tile_at 16) 0)
	(= (blank) 16)
  ))

  
  

  (:bounds (tile - int[0..15]) (position - int[0..16]))
)
