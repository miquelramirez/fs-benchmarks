;; 
;; Problem automatically translated from file:
;; 		/home/frances/projects/code/fs-benchmarks/benchmarks/childsnack-sat14-strips/child-snack_pfile05-2.pddl
;; 

(define (problem child-snack_pfile05-2)
  (:domain childsnack-sat14-fn-mon)
  (:objects
    tray1 tray2 tray3 - tray
	sandw1 sandw2 sandw3 sandw4 sandw5 sandw6 sandw7 sandw8 sandw9 sandw10 sandw11 sandw12 sandw13 - sandwich
	bread1 bread2 bread3 bread4 bread5 bread6 bread7 bread8 bread9 bread10 - bread
	content1 content2 content3 content4 content5 content6 content7 content8 content9 content10 - content
	table1 table2 table3 - place
	child1 child2 child3 child4 child5 child6 child7 child8 child9 child10 - child
  )

  (:init
    (= (childloc child1) table2)
	(= (childloc child10) table3)
	(= (childloc child2) table1)
	(= (childloc child3) table1)
	(= (childloc child4) table2)
	(= (childloc child5) table3)
	(= (childloc child6) table3)
	(= (childloc child7) table3)
	(= (childloc child8) table2)
	(= (childloc child9) table1)
	(= (foodloc bread1) kitchen)
	(= (foodloc bread10) kitchen)
	(= (foodloc bread2) kitchen)
	(= (foodloc bread3) kitchen)
	(= (foodloc bread4) kitchen)
	(= (foodloc bread5) kitchen)
	(= (foodloc bread6) kitchen)
	(= (foodloc bread7) kitchen)
	(= (foodloc bread8) kitchen)
	(= (foodloc bread9) kitchen)
	(= (foodloc content1) kitchen)
	(= (foodloc content10) kitchen)
	(= (foodloc content2) kitchen)
	(= (foodloc content3) kitchen)
	(= (foodloc content4) kitchen)
	(= (foodloc content5) kitchen)
	(= (foodloc content6) kitchen)
	(= (foodloc content7) kitchen)
	(= (foodloc content8) kitchen)
	(= (foodloc content9) kitchen)
	(= (foodloc no_sandwich) nowhere)
	(= (foodloc sandw1) nowhere)
	(= (foodloc sandw10) nowhere)
	(= (foodloc sandw11) nowhere)
	(= (foodloc sandw12) nowhere)
	(= (foodloc sandw13) nowhere)
	(= (foodloc sandw2) nowhere)
	(= (foodloc sandw3) nowhere)
	(= (foodloc sandw4) nowhere)
	(= (foodloc sandw5) nowhere)
	(= (foodloc sandw6) nowhere)
	(= (foodloc sandw7) nowhere)
	(= (foodloc sandw8) nowhere)
	(= (foodloc sandw9) nowhere)
	(= (served child1) no_sandwich)
	(= (served child10) no_sandwich)
	(= (served child2) no_sandwich)
	(= (served child3) no_sandwich)
	(= (served child4) no_sandwich)
	(= (served child5) no_sandwich)
	(= (served child6) no_sandwich)
	(= (served child7) no_sandwich)
	(= (served child8) no_sandwich)
	(= (served child9) no_sandwich)
	(= (trayloc tray1) kitchen)
	(= (trayloc tray2) kitchen)
	(= (trayloc tray3) kitchen)
	(= (type bread1) gluten_yes)
	(= (type bread10) gluten_yes)
	(= (type bread2) gluten_no)
	(= (type bread3) gluten_yes)
	(= (type bread4) gluten_no)
	(= (type bread5) gluten_yes)
	(= (type bread6) gluten_yes)
	(= (type bread7) gluten_yes)
	(= (type bread8) gluten_no)
	(= (type bread9) gluten_no)
	(= (type child1) gluten_no)
	(= (type child10) gluten_no)
	(= (type child2) gluten_yes)
	(= (type child3) gluten_no)
	(= (type child4) gluten_no)
	(= (type child5) gluten_yes)
	(= (type child6) gluten_yes)
	(= (type child7) gluten_yes)
	(= (type child8) gluten_yes)
	(= (type child9) gluten_yes)
	(= (type content1) gluten_no)
	(= (type content10) gluten_yes)
	(= (type content2) gluten_no)
	(= (type content3) gluten_yes)
	(= (type content4) gluten_no)
	(= (type content5) gluten_yes)
	(= (type content6) gluten_yes)
	(= (type content7) gluten_yes)
	(= (type content8) gluten_no)
	(= (type content9) gluten_yes)
	(= (type no_sandwich) unprepared)
	(= (type sandw1) unprepared)
	(= (type sandw10) unprepared)
	(= (type sandw11) unprepared)
	(= (type sandw12) unprepared)
	(= (type sandw13) unprepared)
	(= (type sandw2) unprepared)
	(= (type sandw3) unprepared)
	(= (type sandw4) unprepared)
	(= (type sandw5) unprepared)
	(= (type sandw6) unprepared)
	(= (type sandw7) unprepared)
	(= (type sandw8) unprepared)
	(= (type sandw9) unprepared)
  )

  (:goal
    (and 
	(not (= (served child3) no_sandwich))
	(not (= (served child7) no_sandwich))
	(not (= (served child10) no_sandwich))
	(not (= (served child1) no_sandwich))
	(not (= (served child4) no_sandwich))
	(not (= (served child6) no_sandwich))
	(not (= (served child9) no_sandwich))
	(not (= (served child8) no_sandwich))
	(not (= (served child5) no_sandwich))
	(not (= (served child2) no_sandwich))
	(= (type (served child3)) gluten_no)
	(= (type (served child1)) gluten_no)
	(= (type (served child4)) gluten_no)
	(= (type (served child10)) gluten_no)
	)
  )

  

  

  (:transitions
	((type sandw13) unprepared gluten_yes)
	((type sandw13) unprepared gluten_no)
	((type sandw1) unprepared gluten_yes)
	((type sandw1) unprepared gluten_no)
	((type sandw2) unprepared gluten_yes)
	((type sandw2) unprepared gluten_no)
	((type sandw12) unprepared gluten_yes)
	((type sandw12) unprepared gluten_no)
	((type sandw7) unprepared gluten_yes)
	((type sandw7) unprepared gluten_no)
	((type sandw11) unprepared gluten_yes)
	((type sandw11) unprepared gluten_no)
	((type sandw4) unprepared gluten_yes)
	((type sandw4) unprepared gluten_no)
	((type sandw6) unprepared gluten_yes)
	((type sandw6) unprepared gluten_no)
	((type sandw5) unprepared gluten_yes)
	((type sandw5) unprepared gluten_no)
	((type sandw8) unprepared gluten_yes)
	((type sandw8) unprepared gluten_no)
	((type sandw9) unprepared gluten_yes)
	((type sandw9) unprepared gluten_no)
	((type sandw10) unprepared gluten_yes)
	((type sandw10) unprepared gluten_no)
	((type sandw3) unprepared gluten_yes)
	((type sandw3) unprepared gluten_no))

  
)
